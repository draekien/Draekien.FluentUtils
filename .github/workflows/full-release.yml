name: Manual Release for FluentUtils
on:
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build solution and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Core latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run all tests
        run: dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  calculate-version:
    name: Calculate version
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      nuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        
  publish-monad:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish Monad NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.Monad && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.Monad/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.Monad/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-pipeline-behaviours:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish PipelineBehaviours NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.MediatR.PipelineBehaviours && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.MediatR.PipelineBehaviours/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.MediatR.PipelineBehaviours/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-endpoint-definitions:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish EndpointDefinitions NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.MinimalApis.EndpointDefinitions && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.MinimalApis.EndpointDefinitions/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.MinimalApis.EndpointDefinitions/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-from-composite-attribute:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish FromCompositeAttribute NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.FromCompositeAttribute && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.FromCompositeAttribute/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.FromCompositeAttribute/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-valueObject:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish ValueObject NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.ValueObject && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.ValueObject/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.ValueObject/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-autoMapper:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish AutoMapper NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.AutoMapper && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.AutoMapper/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.AutoMapper/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-autoMapper-Extensions:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish AutoMapper Extensions NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.AutoMapper.Extensions.Microsoft.DependencyInjection && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.AutoMapper.Extensions.Microsoft.DependencyInjection/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.AutoMapper.Extensions.Microsoft.DependencyInjection/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-mediatr-pagination:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish MediatR Pagination NuGet Packagex
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.MediatR.Pagination && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.MediatR.Pagination/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.MediatR.Pagination/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-mediatr-pagination-aspnetcore:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish MediatR Pagination AspNetCore NuGet Package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.MediatR.Pagination.AspNetCore && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.MediatR.Pagination.AspNetCore/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.MediatR.Pagination.AspNetCore/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-enum-extensions:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish enum extensions NuGet package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.EnumExtensions && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.EnumExtensions/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.EnumExtensions/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  publish-domain-driven-enums:
    runs-on: ubuntu-latest
    needs:
      - calculate-version
    name: Publish domain driven enums NuGet package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core Latest
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/draekien/index.json
          dotnet-version: "8.0.x"
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and pack
        run: cd src/FluentUtils.DomainDrivenEnums && dotnet pack -c Release -o out -p:PackageVersion=${{ needs.calculate-version.outputs.nuGetVersionV2 }}

      - name: Publish
        run: |
          dotnet nuget push ./src/FluentUtils.DomainDrivenEnums/out/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
          dotnet nuget push ./src/FluentUtils.DomainDrivenEnums/out/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - calculate-version
      - publish-valueObject
      - publish-autoMapper
      - publish-autoMapper-Extensions
      - publish-mediatr-pagination
      - publish-mediatr-pagination-aspnetcore
      - publish-enum-extensions
      - publish-from-composite-attribute
      - publish-endpoint-definitions
      - publish-pipeline-behaviours
      - publish-domain-driven-enums
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.calculate-version.outputs.nuGetVersionV2 }}
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
